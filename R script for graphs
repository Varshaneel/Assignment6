---
title: "Assignment 6"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Download the files required for the Assignment 6
```{r}
library(dplyr)
setwd("/Users/varshaneelakantan/class/RNASeqExample")
samples <- read.csv('sample_info.csv',header = TRUE, sep = ",", quote = "\"", dec = ".", fill = TRUE, row.names = 1)
genes <- read.csv('expression_results.csv',header = TRUE, sep = ",", quote = "\"", dec = ".", fill = TRUE, row.names = 1)
```
## Density distribution of expression values in KITA_02
```{r}
#library(ggplot2)
p<-density(log(genes$KITA_02))
plot(p, main = "Density plot for KITA_02")
```

## Density distribution of PF_BASES
```{r}
q<- density(samples$PF_BASES)
plot(q,log = "", main = "Density plot for PF_BASES")
```

## Scatter Plot of KITA_01 and KITA_03

```{r}
plot(log2(genes$KITA_01[(genes$KITA_01>10 |genes$KITA_03>10 )]),log2(genes$KITA_03[(genes$KITA_01>10 |genes$KITA_03>10 )]))
```


## Heat Map showing correlation of all the genes

```{r}
library("ggplot2")
library("plotly")
library("reshape2")
corr<-cor(genes)
melted_corr<-melt(corr)
cor<-ggplot(melted_corr , aes(x = Var1, y =Var2)) + geom_raster(aes(fill = value)) + scale_fill_gradient2(low="green", mid="white", high="red", midpoint=0.5) + theme( plot.title = element_blank(),axis.text.x = element_blank(), axis.text.y = element_blank(), axis.title.y = element_blank(), axis.title.x = element_blank())
ggplotly(cor)
```

## To make Dendrogram of all the genes

```{r}
library("dendextend")
genes_transsample <- t(genes[c(rep(FALSE,19),TRUE), ])
hc <- as.dendrogram(hclust(dist(genes_transsample)))
colbranches <- function(n, col)
  {
  a <- attributes(n) 
  attr(n, "edgePar") <- c(a$edgePar, list(col=col, lwd=2))
  n 
}
hc[[1]][[1]] = dendrapply(hc[[1]][[1]], colbranches, "yellow")
hc[[1]][[2]] = dendrapply(hc[[1]][[2]], colbranches, "green")
hc[[2]][[1]] = dendrapply(hc[[2]][[1]], colbranches, "red")
hc[[2]][[2]] = dendrapply(hc[[2]][[2]], colbranches, "blue")
plot(hc)

```


## To Make PCA of the genes

```{r}
setwd("/Users/varshaneelakantan/class/RNASeqExample")
samples <- read.csv('sample_info.csv',header = TRUE, sep = ",", quote = "\"", dec = ".", fill = TRUE, row.names = 1)
genes <- read.csv('expression_results.csv',header = TRUE, sep = ",", quote = "\"", dec = ".", fill = TRUE, row.names = 1)
min(genes[genes>0]) 
genes.log <-log2(genes+8.05e-12)
genes.log.small <- genes.log[seq(1, nrow(genes.log), 20), ]
pca <- prcomp(genes.log.small,center = TRUE,scale. = TRUE)
std_dev <- pca$sdev
pr_var <- std_dev^2
pr_var[1:10]
prop_varex <- pr_var/sum(pr_var)
pcadf<-data.frame(pca$rotation)
samples$uid<-rownames(samples)
pcadf$uid<-rownames(pcadf)
samples<-inner_join(samples,pcadf,by="uid")
plot_ly(samples, x = ~PC2, y = ~PC3, z = ~PC5, size=~reads,marker = list(symbol = 'square', sizemode = 'diameter'), sizes = c(5, 25), color = ~Kit, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'PC2'),
yaxis = list(title = 'PC3'),
zaxis = list(title = 'PC5')))

```



